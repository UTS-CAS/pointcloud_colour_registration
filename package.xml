<?xml version="1.0"?>
<package format="2">
  <name>pointcloud_colour_registration</name>
  <version>0.0.0</version>
  <description>The pointcloud_colour_registration package. Given a pointcloud and a list of cameras, perform colour registration based on pinhole camera projection. Assumes FOV of cameras do not overlap.</description>

  <maintainer email="yujun.lai@uts.edu.au">Yujun Lai</maintainer>
  <license>MIT</license>


  <buildtool_depend>catkin</buildtool_depend>
  <build_depend>cv_bridge</build_depend>
  <build_depend>image_transport</build_depend>
  <build_depend>pcl_conversions</build_depend>
  <build_depend>pcl_ros</build_depend>
  <build_depend>roscpp</build_depend>
  <build_depend>sensor_msgs</build_depend>
  <build_depend>tf</build_depend>
  <build_depend>tf_conversions</build_depend>
  <build_export_depend>cv_bridge</build_export_depend>
  <build_export_depend>image_transport</build_export_depend>
  <build_export_depend>pcl_conversions</build_export_depend>
  <build_export_depend>pcl_ros</build_export_depend>
  <build_export_depend>roscpp</build_export_depend>
  <build_export_depend>sensor_msgs</build_export_depend>
  <build_export_depend>tf</build_export_depend>
  <build_export_depend>tf_conversions</build_export_depend>
  <exec_depend>cv_bridge</exec_depend>
  <exec_depend>image_transport</exec_depend>
  <exec_depend>pcl_conversions</exec_depend>
  <exec_depend>pcl_ros</exec_depend>
  <exec_depend>roscpp</exec_depend>
  <exec_depend>sensor_msgs</exec_depend>
  <exec_depend>tf</exec_depend>
  <exec_depend>tf_conversions</exec_depend>

  <export>
    <!-- <nodelet plugin="${prefix}/nodelet_plugins.xml" /> -->
  </export>
</package>
